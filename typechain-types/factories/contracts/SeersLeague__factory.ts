/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SeersLeague,
  SeersLeagueInterface,
} from "../../contracts/SeersLeague";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    name: "MatchRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "matchIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "predictionsCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "freeUsed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feePaid",
        type: "uint256",
      },
    ],
    name: "PredictionsSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "winners",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "recipientCount",
        type: "uint256",
      },
    ],
    name: "PrizesDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "correct",
        type: "bool",
      },
    ],
    name: "ResultRecorded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "TreasuryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "PREDICTION_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_FREE_PREDICTIONS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "matchIds",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "corrects",
        type: "bool[]",
      },
    ],
    name: "batchRecordResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "winners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "distributePrizes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
    ],
    name: "getMatch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "homeScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "awayScore",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRecorded",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct SeersLeague.Match",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getRemainingFreePredictions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserAccuracy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
    ],
    name: "getUserPrediction",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "matchId",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "outcome",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct SeersLeague.Prediction",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserStats",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "correctPredictions",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPredictions",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "freePredictionsUsed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentStreak",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longestStreak",
            type: "uint256",
          },
        ],
        internalType: "struct SeersLeague.UserStats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "matches",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "homeScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "awayScore",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRecorded",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "predictions",
    outputs: [
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "outcome",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "matchId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "correct",
        type: "bool",
      },
    ],
    name: "recordResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "matchIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "startTimes",
        type: "uint256[]",
      },
    ],
    name: "registerMatches",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "matchIds",
        type: "uint256[]",
      },
      {
        internalType: "uint8[]",
        name: "outcomes",
        type: "uint8[]",
      },
    ],
    name: "submitPredictions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStats",
    outputs: [
      {
        internalType: "uint256",
        name: "correctPredictions",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPredictions",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "freePredictionsUsed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentStreak",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "longestStreak",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c8738038062001c8783398101604081905262000034916200012d565b33806200005c57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200006781620000dd565b50600180556001600160a01b038116620000b75760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420747265617375727960801b604482015260640162000053565b600280546001600160a01b0319166001600160a01b03929092169190911790556200015f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200014057600080fd5b81516001600160a01b03811681146200015857600080fd5b9392505050565b611b18806200016f6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638456cb59116100c35780639c27fb271161007c5780639c27fb2714610459578063a6cafabe1461046c578063a739657d14610474578063ea0ae8fd146104ac578063f0f44260146104bf578063f2fde38b146104d257600080fd5b80638456cb5914610352578063850fa7cb1461035a57806389a30271146103b45780638a65d874146103cf5780638c7dda34146104355780638da5cb5b1461044857600080fd5b8063477e434711610115578063477e4347146102875780634e43603a1461029a5780635c975abb146102ef57806361d027b31461030c578063715018a61461033757806379963b141461033f57600080fd5b806320bacb8e1461015d57806332d2ffaf146101835780633d092b3d1461018d5780633f4ba83a146101f0578063406a378a146101fa5780634768d4ef1461020d575b600080fd5b61017061016b366004611742565b6104e5565b6040519081526020015b60405180910390f35b6101706207a12081565b6101a061019b36600461175d565b610569565b60405161017a9190600060c0820190508251825260208301516020830152604083015160408301526060830151606083015260808301511515608083015260a0830151151560a083015292915050565b6101f861060a565b005b6101f86102083660046117c2565b61061c565b61025661021b36600461175d565b600560205260009081526040902080546001820154600283015460038401546004909401549293919290919060ff8082169161010090041686565b60408051968752602087019590955293850192909252606084015215156080830152151560a082015260c00161017a565b6101f86102953660046117c2565b610820565b6102ad6102a8366004611742565b610a38565b60405161017a9190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b600054600160a01b900460ff16604051901515815260200161017a565b60025461031f906001600160a01b031681565b6040516001600160a01b03909116815260200161017a565b6101f8610ac1565b6101f861034d36600461183c565b610ad3565b6101f8610bff565b61039761036836600461187c565b6004602090815260009283526040808420909152908252902080546001820154600290920154909160ff169083565b6040805193845260ff90921660208401529082015260600161017a565b61031f73833589fcd6edb6e08f4c7c32d4f71b54bda0291381565b61040d6103dd366004611742565b60036020819052600091825260409091208054600182015460028301549383015460049093015491939092909185565b604080519586526020860194909452928401919091526060830152608082015260a00161017a565b6101f86104433660046117c2565b610c0f565b6000546001600160a01b031661031f565b610170610467366004611742565b611165565b610170600581565b61048761048236600461187c565b6111d8565b604080518251815260208084015160ff1690820152918101519082015260600161017a565b6101f86104ba3660046118a6565b611251565b6101f86104cd366004611742565b6114b9565b6101f86104e0366004611742565b611554565b6001600160a01b0381166000908152600360208181526040808420815160a081018352815481526001820154938101849052600282015492810192909252928301546060820152600490920154608083015282036105465750600092915050565b60208101518151610558906064611956565b610562919061196d565b9392505050565b6105a66040518060c00160405280600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b50600090815260056020908152604091829020825160c081018452815481526001820154928101929092526002810154928201929092526003820154606082015260049091015460ff8082161515608084015261010090910416151560a082015290565b610612611592565b61061a6115bf565b565b610624611592565b61062c611614565b8281146106725760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b60448201526064015b60405180910390fd5b6000805b848110156107d15760025473833589fcd6edb6e08f4c7c32d4f71b54bda02913906323b872dd906001600160a01b03168888858181106106b8576106b861198f565b90506020020160208101906106cd9190611742565b8787868181106106df576106df61198f565b6040516001600160e01b031960e088901b1681526001600160a01b039586166004820152949093166024850152506020909102013560448201526064016020604051808303816000875af115801561073b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075f91906119a5565b6107a35760405162461bcd60e51b8152602060048201526015602482015274141c9a5e99481d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610669565b8383828181106107b5576107b561198f565b90506020020135826107c791906119c2565b9150600101610676565b506040517f2fc4320fb393ba3fe5eb8587c23caa7a9f15548393de91c9981c42dbc0dd87b7906108089087908790859082906119d5565b60405180910390a15061081a60018055565b50505050565b610828611592565b8281146108675760405162461bcd60e51b815260206004820152600d60248201526c088c2e8c240dad2e6dac2e8c6d609b1b6044820152606401610669565b60005b83811015610a3157600560008686848181106108885761088861198f565b90506020020135815260200190815260200160002060040160019054906101000a900460ff161580156108d25750428383838181106108c9576108c961198f565b90506020020135115b15610a29576040518060c001604052808686848181106108f4576108f461198f565b9050602002013581526020018484848181106109125761091261198f565b905060200201358152602001600081526020016000815260200160001515815260200160011515815250600560008787858181106109525761095261198f565b602090810292909201358352508181019290925260409081016000208351815591830151600183015582015160028201556060820151600382015560808201516004909101805460a09093015115156101000261ff00199215159290921661ffff19909316929092171790558484828181106109d0576109d061198f565b905060200201357f97f40b4cb1f1d4be9ff7354814fa51b041f07e858155a795fc1670d702fd8c16848484818110610a0a57610a0a61198f565b90506020020135604051610a2091815260200190565b60405180910390a25b60010161086a565b5050505050565b610a6a6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b506001600160a01b0316600090815260036020818152604092839020835160a08101855281548152600182015492810192909252600281015493820193909352908201546060820152600490910154608082015290565b610ac9611592565b61061a600061163e565b610adb611592565b6001600160a01b0383166000908152600460209081526040808320858452909152902060020154610b445760405162461bcd60e51b8152602060048201526013602482015272139bc81c1c99591a58dd1a5bdb88199bdd5b99606a1b6044820152606401610669565b6001600160a01b03831660009081526003602052604090208115610bac578054816000610b7083611a2b565b9091555050600381018054906000610b8783611a2b565b9190505550806004015481600301541115610ba757600381015460048201555b610bb4565b600060038201555b6040805184815283151560208201526001600160a01b038616917fb985021e5b1c34953dffb388231763e34a2e2a498b8cdbc0c913cc52e1ca6eb6910160405180910390a250505050565b610c07611592565b61061a61168e565b610c17611614565b610c1f6116d1565b82610c785760405162461bcd60e51b815260206004820152602360248201527f4d757374207375626d6974206174206c65617374206f6e65207072656469637460448201526234b7b760e91b6064820152608401610669565b828114610cb75760405162461bcd60e51b815260206004820152600d60248201526c088c2e8c240dad2e6dac2e8c6d609b1b6044820152606401610669565b336000908152600360205260408120600281015490918591819060051115610d3857600084600201546005610cec9190611a44565b9050808411610d1b5783915083856002016000828254610d0c91906119c2565b9091555060009350610d329050565b905080610d288185611a44565b6005600287015592505b50610d3c565b8291505b60008215610e2657610d516207a12084611956565b6002546040516323b872dd60e01b81523360048201526001600160a01b0390911660248201526044810182905290915073833589fcd6edb6e08f4c7c32d4f71b54bda02913906323b872dd906064016020604051808303816000875af1158015610dbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de391906119a5565b610e265760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b6044820152606401610669565b60005b848110156110fb5760008a8a83818110610e4557610e4561198f565b9050602002013590506001898984818110610e6257610e6261198f565b9050602002016020810190610e779190611a57565b60ff1610158015610eb257506003898984818110610e9757610e9761198f565b9050602002016020810190610eac9190611a57565b60ff1611155b610ef05760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206f7574636f6d6560881b6044820152606401610669565b33600090815260046020908152604080832084845290915290206002015415610f5b5760405162461bcd60e51b815260206004820152601760248201527f4d6174636820616c7265616479207072656469637465640000000000000000006044820152606401610669565b60008181526005602052604090206004810154610100900460ff16610fc25760405162461bcd60e51b815260206004820152601760248201527f4d61746368206973206e6f7420726567697374657265640000000000000000006044820152606401610669565b806001015442106110155760405162461bcd60e51b815260206004820152601a60248201527f50726564696374696f6e20646561646c696e65207061737365640000000000006044820152606401610669565b600481015460ff161561106a5760405162461bcd60e51b815260206004820152601e60248201527f4d6174636820726573756c747320616c7265616479207265636f7264656400006044820152606401610669565b60405180606001604052808381526020018b8b8681811061108d5761108d61198f565b90506020020160208101906110a29190611a57565b60ff90811682524260209283015233600090815260048352604080822096825295835285902083518155918301516001808401805460ff1916929093169190911790915591909301516002909301929092555001610e29565b508385600101600082825461111091906119c2565b909155505060405133907f717affaba5926a5c162f937609bbabfdbca954c6ca7fdecfc4d768f51e6ebb479061114f908c908c90899088908890611a7a565b60405180910390a2505050505061081a60018055565b6001600160a01b0381166000908152600360208181526040808420815160a0810183528154815260018201549381019390935260028101549183018290529283015460608301526004909201546080820152906005116111c85750600092915050565b6040810151610562906005611a44565b6111ff604051806060016040528060008152602001600060ff168152602001600081525090565b506001600160a01b0382166000908152600460209081526040808320848452825291829020825160608101845281548152600182015460ff169281019290925260020154918101919091525b92915050565b611259611592565b848314801561126757508281145b6112a55760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b6044820152606401610669565b60005b858110156114b0576000600460008989858181106112c8576112c861198f565b90506020020160208101906112dd9190611742565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008787858181106113115761131161198f565b9050602002013581526020019081526020016000206002015411156114a8576000600360008989858181106113485761134861198f565b905060200201602081019061135d9190611742565b6001600160a01b03166001600160a01b0316815260200190815260200160002090508383838181106113915761139161198f565b90506020020160208101906113a69190611ac5565b156113f55780548160006113b983611a2b565b90915550506003810180549060006113d083611a2b565b91905055508060040154816003015411156113f057600381015460048201555b6113fd565b600060038201555b87878381811061140f5761140f61198f565b90506020020160208101906114249190611742565b6001600160a01b03167fb985021e5b1c34953dffb388231763e34a2e2a498b8cdbc0c913cc52e1ca6eb68787858181106114605761146061198f565b905060200201358686868181106114795761147961198f565b905060200201602081019061148e9190611ac5565b6040805192835290151560208301520160405180910390a2505b6001016112a8565b50505050505050565b6114c1611592565b6001600160a01b03811661150a5760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420747265617375727960801b6044820152606401610669565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d190600090a250565b61155c611592565b6001600160a01b03811661158657604051631e4fbdf760e01b815260006004820152602401610669565b61158f8161163e565b50565b6000546001600160a01b0316331461061a5760405163118cdaa760e01b8152336004820152602401610669565b6115c76116fc565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60026001540361163757604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6116966116d1565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115f73390565b600054600160a01b900460ff161561061a5760405163d93c066560e01b815260040160405180910390fd5b600054600160a01b900460ff1661061a57604051638dfc202b60e01b815260040160405180910390fd5b80356001600160a01b038116811461173d57600080fd5b919050565b60006020828403121561175457600080fd5b61056282611726565b60006020828403121561176f57600080fd5b5035919050565b60008083601f84011261178857600080fd5b50813567ffffffffffffffff8111156117a057600080fd5b6020830191508360208260051b85010111156117bb57600080fd5b9250929050565b600080600080604085870312156117d857600080fd5b843567ffffffffffffffff808211156117f057600080fd5b6117fc88838901611776565b9096509450602087013591508082111561181557600080fd5b5061182287828801611776565b95989497509550505050565b801515811461158f57600080fd5b60008060006060848603121561185157600080fd5b61185a84611726565b92506020840135915060408401356118718161182e565b809150509250925092565b6000806040838503121561188f57600080fd5b61189883611726565b946020939093013593505050565b600080600080600080606087890312156118bf57600080fd5b863567ffffffffffffffff808211156118d757600080fd5b6118e38a838b01611776565b909850965060208901359150808211156118fc57600080fd5b6119088a838b01611776565b9096509450604089013591508082111561192157600080fd5b5061192e89828a01611776565b979a9699509497509295939492505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761124b5761124b611940565b60008261198a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156119b757600080fd5b81516105628161182e565b8082018082111561124b5761124b611940565b6060808252810184905260008560808301825b87811015611a16576001600160a01b03611a0184611726565b168252602092830192909101906001016119e8565b50602084019590955250506040015292915050565b600060018201611a3d57611a3d611940565b5060010190565b8181038181111561124b5761124b611940565b600060208284031215611a6957600080fd5b813560ff8116811461056257600080fd5b6080808252810185905260006001600160fb1b03861115611a9a57600080fd5b8560051b808860a0850137602083019590955250604081019290925260608201520160a00192915050565b600060208284031215611ad757600080fd5b81356105628161182e56fea264697066735822122050b05556404af6e051e12fb9c5ed1db80f2e9e898e5f29091740a0bc3ddd449c64736f6c63430008160033";

type SeersLeagueConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SeersLeagueConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SeersLeague__factory extends ContractFactory {
  constructor(...args: SeersLeagueConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _treasury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_treasury, overrides || {});
  }
  override deploy(
    _treasury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_treasury, overrides || {}) as Promise<
      SeersLeague & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SeersLeague__factory {
    return super.connect(runner) as SeersLeague__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeersLeagueInterface {
    return new Interface(_abi) as SeersLeagueInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SeersLeague {
    return new Contract(address, _abi, runner) as unknown as SeersLeague;
  }
}
